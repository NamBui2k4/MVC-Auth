<!doctype html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport"
        content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" href="/css/bootstrap.min.css">
    <link rel="stylesheet" href="/fa/css/font-awesome.min.css">
    <script src="/jquery/jquery.min.js"></script>
    <script src="/popper/popper.min.js"></script>
    <script src="/js/bootstrap.bundle.js"></script>
    <title>Thông tin người dùng</title>
    <style>
        .row div {
            margin-top: 16px;
        }

        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
        }

        body {
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            /*A perfect way to make image darkish overlay, without any other tag*/
            background: #12c2e9;
            /* fallback for old browsers */
            background: -webkit-linear-gradient(to right, #f64f59, #c471ed, #12c2e9);
            /* Chrome 10-25, Safari 5.1-6 */
            background: linear-gradient(to right, #f64f59, #c471ed, #12c2e9);
            /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */

            background-size: cover;
            color: #fff;
            padding: 20px;
        }

        .container {
            max-width: 900px;
            width: 100%;
            background: rgba(15, 23, 42, 0.7);
            text-align: center;
            padding: 40px;
            backdrop-filter: blur(10px);
            border-radius: 20px;
            border: 1px solid rgba(255, 255, 255, 0.1);
            box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
        }

        .title {
            font-size: 2.3rem;
            font-weight: 600;
            margin-bottom: 15px;
            background: linear-gradient(90deg, #3b82f6, #8b5cf6);
            background-clip: text;
            color: transparent;
        }

        .end-time {
            font-size: 1.2rem;
            font-weight: 400;
            color: #94a3b8;
            margin-bottom: 50px;
        }



        .wrapper {
            display: flex;
            justify-content: center;
            gap: 30px;
            margin-top: 40px;
            flex-wrap: wrap;
        }

        .time-block {
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .time-value {
            width: 120px;
            height: 120px;
            text-align: center;
            font-size: 3.5rem;
            font-weight: 600;
            background: rgba(30, 41, 59, .5);
            border-radius: 16px;
            border: 1px solid rgba(255, 255, 255, .05);
            margin-bottom: 15px;
            color: #f8fafc;
        }

        .time-label {
            font-size: 1rem;
            text-transform: uppercase;
            letter-spacing: 2px;
            color: #94a3b8;
            font-weight: 500;
        }

        .gradienttext {
            background-image: linear-gradient(to right, #ee00ff 0%, #fbff00 100%);
            color: transparent;
            -webkit-background-clip: text;
        }

        .lef-container {
            background: linear-gradient(to top right, #25053b, #061a3f, #004d4d);
            background-blend-mode: multiply;
            width: 300px;
            height: 550px;
            border-radius: 20px;
            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
        }

        .card-img-top {
            margin-top: 10px;
            width: 90%;
            height: 90%;
            max-width: 200px;
            border-radius: 50%;
            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);

        }

        table {
            width: 100%;
            table-layout: fixed;
            /* khóa tỉ lệ cột */
        }

        td {
            padding: 6px 8px;
            vertical-align: middle;
            color: white;
        }

        td:first-child {
            width: 40%;
            /* cột 1 chiếm 40% */
            text-align: left;
            font-weight: 600;
        }

        td:last-child {
            width: 60%;
            /* cột 2 chiếm 60% */
            text-align: left;
        }

        .timeout-text {
            margin-top: 20px;
            letter-spacing: 2px;
            color: #94a3b8;
            font-weight: 500;
            opacity: 0;
            transform: translateY(20px);
            transition: opacity 1s ease, transform 1s ease;
        }

        /* Khi thêm class .show, dòng chữ sẽ hiện dần lên */
        .timeout-text.show {
            opacity: 1;
            transform: translateY(0);
        }

        /* Ẩn mặc định */
        .hidden {
            display: none;
        }
    </style>
</head>
<!-- class="overflow-hidden" -->

<body>

    <div class="container">
        <div class="d-flex align-items-center gap-3 justify-content-center">
            <div class="col-sm-6 col-md-5 col-lg-4 me-5">
                <div class="card lef-container">
                    <div class="card-header text-white text-center mt-0">
                        <h3 style="margin-top: 10px;" class="gradienttext">
                            Thông tin của tôi
                        </h3>
                    </div>

                    <div>
                        <img class="card-img-top" src="https://www.w3schools.com/bootstrap4/img_avatar1.png"
                            alt="Card image">
                    </div>

                    <div class="card-body"> 
                        <table>
                            <tr>
                                <td>Họ tên:</td>
                                <td>Trần Minh Trí</td>
                            </tr>
                            <tr>
                                <td>Giới tính:</td>
                                <td>Nam</td>
                            </tr>
                            <tr>
                                <td>Tuổi:</td>
                                <td>27</td>
                            </tr>
                            <tr>
                                <td>Email:</td>
                                <td>tri@gmail.com</td>
                            </tr>
                        </table>
                        <a href="#" class="btn btn-primary mt-5">Liên hệ</a>
                    </div>
                </div>
                <p class="mt-3"><a href="/login">Quay lại</a></p>
            </div>

            <div>
                <h1 class="gradienttext" > Thời gian còn lại </h1>
                <div class="wrapper me-6">
                
                <div class="time-block">
                    <input type="text" class="time-value" value="00" readonly>
                    <div class="time-label">Hours</div>
                </div>

                <div class="time-block">
                    <input type="text" class="time-value" value="00" readonly>
                    <div class="time-label">Minutes</div>
                </div>

                <div class="time-block">
                    <input type="text" class="time-value" value="00" readonly>
                    <div class="time-label">Seconds</div>
                </div>

                <h1 id="timeout-msg" class="timeout-text hidden">
                    Đã hết thời gian !
                </h1>
            </div>
            </div>
            
        </div>
    </div>

    <script>
        const timeLimit = <%= sessionTTL %>; // 1 giờ
        const startTime = Date.now();
        const endTime = startTime + timeLimit;
        let input = document.querySelectorAll('input');
        const timeoutMsg = document.getElementById('timeout-msg');

        const countDown = () => {
            let now = Date.now();
            let diff = (endTime - now) / 1000;

            if (diff <= 0) {
                diff = 0;
                clearInterval(timer);
                // Hiện dòng chữ với hiệu ứng
                timeoutMsg.classList.remove('hidden');
                setTimeout(() => timeoutMsg.classList.add('show'), 50);
            }
            // 3600s => ?h ?m ?s (1:00:00)
            // 3600 // 60

            // Giờ - phút - giây
            const hours = Math.floor((diff / 3600) % 24);
            const minutes = Math.floor((diff / 60) % 60);
            const seconds = Math.floor(diff % 60);

            input[0].value = String(hours).padStart(2, '0');
            input[1].value = String(minutes).padStart(2, '0');
            input[2].value = String(seconds).padStart(2, '0');
        };

        countDown();
        const timer = setInterval(countDown, 1000);
        setTimeout(() =>{
            window.location.href = '/login'
        }, timeLimit + 2 * 1000)
    </script>
</body>

</html>